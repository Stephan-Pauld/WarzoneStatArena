[{"/Users/torabi97/Desktop/coding_tools/final_project/statsite/src/index.js":"1","/Users/torabi97/Desktop/coding_tools/final_project/statsite/src/App.js":"2","/Users/torabi97/Desktop/coding_tools/final_project/statsite/src/RouterPages/Home.js":"3","/Users/torabi97/Desktop/coding_tools/final_project/statsite/src/Navbar.js":"4","/Users/torabi97/Desktop/coding_tools/final_project/statsite/src/roulette/Roulette.js":"5","/Users/torabi97/Desktop/coding_tools/final_project/statsite/src/RouterPages/Guns.js":"6","/Users/torabi97/Desktop/coding_tools/final_project/statsite/src/RouterPages/Profile.js":"7","/Users/torabi97/Desktop/coding_tools/final_project/statsite/src/images.js":"8","/Users/torabi97/Desktop/coding_tools/final_project/statsite/src/StatCard.js":"9","/Users/torabi97/Desktop/coding_tools/final_project/statsite/src/roulette/answers.js":"10","/Users/torabi97/Desktop/coding_tools/final_project/statsite/src/roulette/rouletteButton.js":"11","/Users/torabi97/Desktop/coding_tools/final_project/statsite/src/roulette/checkbox.js":"12","/Users/torabi97/Desktop/coding_tools/final_project/statsite/src/hooks/useApplicationData.js":"13","/Users/torabi97/Desktop/coding_tools/final_project/statsite/src/GunImage.js":"14","/Users/torabi97/Desktop/coding_tools/final_project/statsite/src/StatNavBar.js":"15","/Users/torabi97/Desktop/coding_tools/final_project/statsite/src/Achievements.js":"16","/Users/torabi97/Desktop/coding_tools/final_project/statsite/src/textField.js":"17","/Users/torabi97/Desktop/coding_tools/final_project/statsite/src/platform.js":"18","/Users/torabi97/Desktop/coding_tools/final_project/statsite/src/news.js":"19","/Users/torabi97/Desktop/coding_tools/final_project/statsite/src/leaderboard.js":"20"},{"size":240,"mtime":1609039219009,"results":"21","hashOfConfig":"22"},{"size":1041,"mtime":1609304381342,"results":"23","hashOfConfig":"22"},{"size":3487,"mtime":1609305133561,"results":"24","hashOfConfig":"22"},{"size":6477,"mtime":1609039218935,"results":"25","hashOfConfig":"22"},{"size":4259,"mtime":1609298777430,"results":"26","hashOfConfig":"22"},{"size":3112,"mtime":1609305570156,"results":"27","hashOfConfig":"22"},{"size":2233,"mtime":1609041046039,"results":"28","hashOfConfig":"22"},{"size":4503,"mtime":1609039218936,"results":"29","hashOfConfig":"22"},{"size":1496,"mtime":1609039218936,"results":"30","hashOfConfig":"22"},{"size":1576,"mtime":1609038075958,"results":"31","hashOfConfig":"22"},{"size":940,"mtime":1608760455987,"results":"32","hashOfConfig":"22"},{"size":678,"mtime":1609049276765,"results":"33","hashOfConfig":"22"},{"size":2054,"mtime":1609306618035,"results":"34","hashOfConfig":"22"},{"size":1539,"mtime":1609039218934,"results":"35","hashOfConfig":"22"},{"size":1063,"mtime":1609039218936,"results":"36","hashOfConfig":"22"},{"size":445,"mtime":1609039218933,"results":"37","hashOfConfig":"22"},{"size":742,"mtime":1609305526082,"results":"38","hashOfConfig":"22"},{"size":1622,"mtime":1609293603465,"results":"39","hashOfConfig":"22"},{"size":4374,"mtime":1609199826830,"results":"40","hashOfConfig":"22"},{"size":10761,"mtime":1609199410214,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"nizyzz",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"44"},"/Users/torabi97/Desktop/coding_tools/final_project/statsite/src/index.js",[],["90","91"],"/Users/torabi97/Desktop/coding_tools/final_project/statsite/src/App.js",[],"/Users/torabi97/Desktop/coding_tools/final_project/statsite/src/RouterPages/Home.js",["92","93","94","95","96","97","98","99","100","101"],"/Users/torabi97/Desktop/coding_tools/final_project/statsite/src/Navbar.js",[],"/Users/torabi97/Desktop/coding_tools/final_project/statsite/src/roulette/Roulette.js",["102","103","104","105"],"/Users/torabi97/Desktop/coding_tools/final_project/statsite/src/RouterPages/Guns.js",["106","107","108","109","110","111"],"/Users/torabi97/Desktop/coding_tools/final_project/statsite/src/RouterPages/Profile.js",["112","113","114"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios';\nimport StatCard from '../StatCard.js'\nimport Achievements from '../Achievements'\nimport '../stats.css'\nimport PrimarySearchAppBar from '../Navbar.js';\n\n\nexport default function Profile(props) {\n\n  const storedFavs = localStorage.getItem(\"name\")\n  const gunsArr = JSON.parse(storedFavs)\n\n  const [state, setState] = useState({\n    favorites: [],\n    achievements: [],\n  })\n\n  useEffect(() => {\n    Promise.all([\n      axios.get('https://shrouded-ridge-71805.herokuapp.com/favorites/moho'),\n      axios.get('https://shrouded-ridge-71805.herokuapp.com/achieve/moho')\n    ])\n      .then(([favorites, achievements]) => {\n        // console.log(favorites.data);\n        setState(prev => ({\n          ...prev,\n          favorites: favorites.data,\n          achievements: achievements.data,\n        }))\n      })\n      .catch(error => {\n        console.log(\"WE GOT AN ERROR\");\n        console.log(error);\n      })\n  }, [])\n\n  const earnedAchievements = Object.keys(state.achievements).map((achievement) => {\n    return (\n      <img style={{ width: '3%' }} className=\"achiev-icons\" src={state.achievements[achievement]} alt=\"\" />\n    )\n  })\n\n  if (state.favorites.length > 0) {\n    console.log(\"TRUTH\");\n    const favItems = state.favorites.map((fav) => {\n      console.log(fav);\n      return (\n        <StatCard\n          image={fav.image}\n          gunName={fav.gun}\n          hits={fav.hits}\n          kills={fav.kills}\n          kd={fav.kd}\n          headshots={fav.headshots}\n          accuracy={fav.accuracy}\n          shots={fav.shots}\n        />\n      )\n    })\n    return (\n      <>\n        <div className=\"card-row\">\n          {favItems}\n        </div>\n        <div>\n          <h3 style={{ textAlign: 'center', backgroundColor: \"#272928\", color: \"white\" }}>Achievements</h3>\n          <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent:\"center\" }}>\n          {earnedAchievements}\n        </div>\n        </div>\n      </>\n    )\n  } else {\n    return (\n      <>\n        <h1>Empty</h1>\n        <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent:\"center\" }}>\n          {earnedAchievements}\n        </div>\n      </>\n    )\n  }\n}\n","/Users/torabi97/Desktop/coding_tools/final_project/statsite/src/images.js",[],"/Users/torabi97/Desktop/coding_tools/final_project/statsite/src/StatCard.js",["115","116","117"],"import React from 'react'\n\nexport default function StatCard(props) {\n  const {image, hits, kills, kd, headshots, accuracy, shots, gunName, onAdd} = props;\n  return (\n    <div class=\"container\">\n      <div class=\"card\">\n        <div class=\"face face1\">\n          <button onClick={() => onAdd(gunName)} >{gunName}</button>\n          <div class=\"content\">\n            <div class='gun-flex'>\n              <img class=\"gun-icon\" src={image} alt=\"\" />\n            </div>\n          </div>\n        </div>\n        <div class=\"face face2\">\n          <div class=\"top-row\">\n            <h4>Hits</h4>\n            <h4>Kills</h4>\n            <h4>KD</h4>\n            <h4>HeadShots</h4>\n            <h4>Acc</h4>\n            <h4>Shots</h4>\n          </div>\n          <div class=\"top-row\">\n            <h5>{hits}</h5>\n            <h5>{kills}</h5>\n            <h5>{kd}</h5>\n            <h5>{headshots}</h5>\n            <h5>{accuracy}</h5>\n            <h5>{shots}</h5>\n          </div>\n          <div class=\"achievements\">\n            <h2>Achievements</h2>\n            <hr></hr>\n            <div >\n              <img class=\"achiev-icons\" src=\"https://www.flaticon.com/svg/static/icons/svg/3135/3135783.svg\" />\n              <img class=\"achiev-icons\" src=\"https://www.flaticon.com/svg/static/icons/svg/1170/1170611.svg\" />\n              <img class=\"achiev-icons\" src=\"https://www.flaticon.com/svg/static/icons/svg/3938/3938361.svg\" />\n            </div>\n          </div>\n\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/torabi97/Desktop/coding_tools/final_project/statsite/src/roulette/answers.js",["118","119","120"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport SwitchesSize from \"./checkbox\";\nimport ClassesNesting from \"./rouletteButton\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 500,\n    maxWidth: 500,\n    minHeight: 400,\n    maxHeight: 400,\n    margin: 20,\n\n  },\n  media: {\n    height: 200,\n  },\n  text: {\n   fontFamily: \"Times New Roman, serif\",\n   fontSize: 30,\n  }\n});\n\nexport default function MediaCard(props) {\n  const classes = useStyles();\n  \n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          image={props.image}\n          title={props.title}\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\" className={classes.text}>\n           <SwitchesSize \n            label={props.title} checked={props.checked} onChange={props.onChange}/>\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={classes.text}>\n          {props.selected}\n          <br/>\n          {props.class}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      \n    </Card>\n  );\n}","/Users/torabi97/Desktop/coding_tools/final_project/statsite/src/roulette/rouletteButton.js",[],"/Users/torabi97/Desktop/coding_tools/final_project/statsite/src/roulette/checkbox.js",[],"/Users/torabi97/Desktop/coding_tools/final_project/statsite/src/hooks/useApplicationData.js",[],"/Users/torabi97/Desktop/coding_tools/final_project/statsite/src/GunImage.js",["121","122","123"],"import React, { useState } from 'react'\nimport axios from 'axios'\nimport './stats.css'\nimport StatCard from './StatCard.js'\n\n\nconst favs = []\nexport default function GunImage(props) {\n  const { shown, gunImgs } = props\n  // Looping through whatever specific category was selected!\n\n  // WE CAN ADD SORTING HERE gun.kills or gun.headshots\n  const weapons = Object.keys(shown).map((gun) => {\n    const hits = shown[gun].properties.hits\n    const kills = shown[gun].properties.kills\n    const kdRatio = Math.round(shown[gun].properties.kdRatio * 100) / 100\n    const accuracy = Math.round(shown[gun].properties.accuracy * 100) / 100\n    const shots = shown[gun].properties.shots\n    const deaths = shown[gun].properties.deaths\n    const headShots = shown[gun].properties.headshots\n    const image = gunImgs[gun]\n    const onButtonClick = (gun) => {\n      const gunObj = {\n        gun,\n        hits,\n        kills,\n        kdRatio,\n        accuracy,\n        shots,\n        headShots,\n        image,\n      }\n      axios\n        .post(\"http://localhost:3030/favourited/moho\", gunObj)\n        .then(res => {\n          console.log(res);\n        })\n        .catch(err => {\n          console.log(err);\n        })\n    }\n    return (\n      <StatCard\n        gunName={gun}\n        image={gunImgs[gun]}\n        hits={hits}\n        kills={kills}\n        kd={kdRatio}\n        headshots={headShots}\n        accuracy={accuracy}\n        shots={shots}\n        onAdd={onButtonClick}\n      />\n    )\n  });\n\n\n\n\n\n  return (\n    <>\n      {weapons}\n    </>\n  )\n\n}\n\n\n","/Users/torabi97/Desktop/coding_tools/final_project/statsite/src/StatNavBar.js",[],"/Users/torabi97/Desktop/coding_tools/final_project/statsite/src/Achievements.js",[],"/Users/torabi97/Desktop/coding_tools/final_project/statsite/src/textField.js",["124","125"],"/Users/torabi97/Desktop/coding_tools/final_project/statsite/src/platform.js",["126","127","128","129","130","131"],"import React, {useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { makeStyles } from '@material-ui/core/styles';\nimport battlenet from \"./img/battlenet-icon.png\";\nimport xbox from \"./img/xbox2.png\";\nimport psn from \"./img/psn-icon.png\";\nimport Mw from \"./img/Cod-icon.png\";\nimport \"./checkbox.css\"\nimport { BackgroundColor } from 'chalk';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    '& > *': {\n      margin: theme.spacing(1),\n      height: 55,\n      \n    },\n    '&:focus': {\n      background:\"red\",\n    },\n    img: {\n      width: 48,\n    }\n  },\n}));\n\nexport default function GroupSizesColors(props) {\n  const classes = useStyles();\n  const [platform, setPlatform] = useState(\"\")\n  \n  //console.log(platform);\n  return (\n    <div className={classes.root}>\n      <ButtonGroup size=\"large\" color=\"primary\" aria-label=\"large outlined primary button group\">\n        <Button value=\"psn\" onClick= {(event) => console.log(\"shit\")}>\n          <img className=\"img\" src={psn}/>\n        </Button>\n        <Button  value=\"acti\" onClick= {(event) => setPlatform(\"activi\")} >\n          <img  className=\"img\" src={Mw}/>\n        </Button>\n        <Button value=\"battlenet\" onClick= {(event) => setPlatform(\"battlenet\")} >\n          <img  className=\"img\" src={battlenet}/>\n        </Button>\n        <Button value=\"xbox\" onClick= {(event) => setPlatform(\"xbox\")} >\n          <img className=\"img\" src={xbox}/>\n        </Button>\n      </ButtonGroup>\n    </div>\n  );\n}","/Users/torabi97/Desktop/coding_tools/final_project/statsite/src/news.js",["132","133","134"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport twitch from \"./img/twitch.png\";\nimport ReactPlayer from \"react-player\"\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n   \n    \n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\n\nexport default function RecipeReviewCard() {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\n            AG\n          </Avatar>\n        }\n        action={\n          <IconButton aria-label=\"settings\">\n            <MoreVertIcon />\n          </IconButton>\n        }\n        title=\"News\"\n        subheader=\"Twitch\"\n      />\n      <img src={twitch}>\n      </img>\n      {/* <ReactPlayer\n        url=\"https://www.twitch.tv/videos/852030079\"\n      /> */}\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton aria-label=\"add to favorites\">\n          <FavoriteIcon />\n        </IconButton>\n        <IconButton aria-label=\"share\">\n          <ShareIcon />\n        </IconButton>\n        <IconButton\n          className={clsx(classes.expand, {\n            [classes.expandOpen]: expanded,\n          })}\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label=\"show more\"\n        >\n          <ExpandMoreIcon />\n        </IconButton>\n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          <Typography paragraph>Method:</Typography>\n          <Typography paragraph>\n            Heat 1/2 cup of the broth in a pot until simmering, add saffron and set aside for 10\n            minutes.\n          </Typography>\n          <Typography paragraph>\n            Heat oil in a (14- to 16-inch) paella pan or a large, deep skillet over medium-high\n            heat. Add chicken, shrimp and chorizo, and cook, stirring occasionally until lightly\n            browned, 6 to 8 minutes. Transfer shrimp to a large plate and set aside, leaving chicken\n            and chorizo in the pan. Add pimentón, bay leaves, garlic, tomatoes, onion, salt and\n            pepper, and cook, stirring often until thickened and fragrant, about 10 minutes. Add\n            saffron broth and remaining 4 1/2 cups chicken broth; bring to a boil.\n          </Typography>\n          <Typography paragraph>\n            Add rice and stir very gently to distribute. Top with artichokes and peppers, and cook\n            without stirring, until most of the liquid is absorbed, 15 to 18 minutes. Reduce heat to\n            medium-low, add reserved shrimp and mussels, tucking them down into the rice, and cook\n            again without stirring, until mussels have opened and rice is just tender, 5 to 7\n            minutes more. (Discard any mussels that don’t open.)\n          </Typography>\n          <Typography>\n            Set aside off of the heat to let rest for 10 minutes, and then serve.\n          </Typography>\n        </CardContent>\n      </Collapse>\n    </Card>\n  );\n}","/Users/torabi97/Desktop/coding_tools/final_project/statsite/src/leaderboard.js",["135","136","137"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\n\nfunction createData(name, kills, death, KD, Votes) {\n  return { name, kills, death, KD, Votes };\n}\n\nconst rows = [\n  createData('YooGood', 305, 3.7, 67, 4.3),\n  createData('Stephan', 452, 25.0, 51, 4.9),\n  createData('CaprianPrice', 262, 16.0, 24, 6.0),\n  createData('yesSiir', 159, 6.0, 24, 4.0),\n  createData('Mo', 356, 16.0, 49, 3.9),\n];\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Streamers' },\n  { id: 'kills', numeric: true, disablePadding: false, label: 'kills' },\n  { id: 'death', numeric: true, disablePadding: false, label: 'death' },\n  { id: 'KD', numeric: true, disablePadding: false, label: 'k/d' },\n  { id: 'Votes', numeric: true, disablePadding: false, label: 'Votes' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          \n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n          Top Streamer of the week\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function EnhancedTable() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('kills');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.name);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => handleClick(event, row.name)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.name}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.kills}</TableCell>\n                      <TableCell align=\"right\">{row.death}</TableCell>\n                      <TableCell align=\"right\">{row.KD}</TableCell>\n                      <TableCell align=\"right\">{row.Votes}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      />\n    </div>\n  );\n}",{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":1,"column":16,"nodeType":"144","messageId":"145","endLine":1,"endColumn":24},{"ruleId":"142","severity":1,"message":"146","line":5,"column":8,"nodeType":"144","messageId":"145","endLine":5,"endColumn":13},{"ruleId":"142","severity":1,"message":"147","line":6,"column":8,"nodeType":"144","messageId":"145","endLine":6,"endColumn":14},{"ruleId":"142","severity":1,"message":"148","line":7,"column":8,"nodeType":"144","messageId":"145","endLine":7,"endColumn":12},{"ruleId":"142","severity":1,"message":"149","line":8,"column":8,"nodeType":"144","messageId":"145","endLine":8,"endColumn":13},{"ruleId":"142","severity":1,"message":"150","line":9,"column":8,"nodeType":"144","messageId":"145","endLine":9,"endColumn":13},{"ruleId":"142","severity":1,"message":"151","line":10,"column":8,"nodeType":"144","messageId":"145","endLine":10,"endColumn":12},{"ruleId":"142","severity":1,"message":"152","line":11,"column":8,"nodeType":"144","messageId":"145","endLine":11,"endColumn":18},{"ruleId":"142","severity":1,"message":"153","line":13,"column":8,"nodeType":"144","messageId":"145","endLine":13,"endColumn":13},{"ruleId":"154","severity":1,"message":"155","line":103,"column":13,"nodeType":"156","endLine":103,"endColumn":56},{"ruleId":"142","severity":1,"message":"157","line":3,"column":8,"nodeType":"144","messageId":"145","endLine":3,"endColumn":20},{"ruleId":"142","severity":1,"message":"158","line":6,"column":8,"nodeType":"144","messageId":"145","endLine":6,"endColumn":22},{"ruleId":"142","severity":1,"message":"146","line":7,"column":8,"nodeType":"144","messageId":"145","endLine":7,"endColumn":13},{"ruleId":"154","severity":1,"message":"155","line":150,"column":13,"nodeType":"156","endLine":153,"endColumn":15},{"ruleId":"142","severity":1,"message":"159","line":7,"column":8,"nodeType":"144","messageId":"145","endLine":7,"endColumn":23},{"ruleId":"142","severity":1,"message":"160","line":33,"column":10,"nodeType":"144","messageId":"145","endLine":33,"endColumn":13},{"ruleId":"142","severity":1,"message":"161","line":33,"column":15,"nodeType":"144","messageId":"145","endLine":33,"endColumn":21},{"ruleId":"142","severity":1,"message":"162","line":34,"column":10,"nodeType":"144","messageId":"145","endLine":34,"endColumn":14},{"ruleId":"142","severity":1,"message":"163","line":34,"column":16,"nodeType":"144","messageId":"145","endLine":34,"endColumn":23},{"ruleId":"164","severity":1,"message":"165","line":79,"column":6,"nodeType":"166","endLine":79,"endColumn":8,"suggestions":"167"},{"ruleId":"142","severity":1,"message":"168","line":4,"column":8,"nodeType":"144","messageId":"145","endLine":4,"endColumn":20},{"ruleId":"142","severity":1,"message":"169","line":6,"column":8,"nodeType":"144","messageId":"145","endLine":6,"endColumn":27},{"ruleId":"142","severity":1,"message":"170","line":12,"column":9,"nodeType":"144","messageId":"145","endLine":12,"endColumn":16},{"ruleId":"154","severity":1,"message":"155","line":37,"column":15,"nodeType":"156","endLine":37,"endColumn":112},{"ruleId":"154","severity":1,"message":"155","line":38,"column":15,"nodeType":"156","endLine":38,"endColumn":112},{"ruleId":"154","severity":1,"message":"155","line":39,"column":15,"nodeType":"156","endLine":39,"endColumn":112},{"ruleId":"142","severity":1,"message":"171","line":5,"column":8,"nodeType":"144","messageId":"145","endLine":5,"endColumn":19},{"ruleId":"142","severity":1,"message":"172","line":8,"column":8,"nodeType":"144","messageId":"145","endLine":8,"endColumn":14},{"ruleId":"142","severity":1,"message":"158","line":11,"column":8,"nodeType":"144","messageId":"145","endLine":11,"endColumn":22},{"ruleId":"142","severity":1,"message":"143","line":1,"column":17,"nodeType":"144","messageId":"145","endLine":1,"endColumn":25},{"ruleId":"142","severity":1,"message":"173","line":7,"column":7,"nodeType":"144","messageId":"145","endLine":7,"endColumn":11},{"ruleId":"142","severity":1,"message":"174","line":19,"column":11,"nodeType":"144","messageId":"145","endLine":19,"endColumn":17},{"ruleId":"142","severity":1,"message":"143","line":1,"column":16,"nodeType":"144","messageId":"145","endLine":1,"endColumn":24},{"ruleId":"142","severity":1,"message":"153","line":4,"column":8,"nodeType":"144","messageId":"145","endLine":4,"endColumn":13},{"ruleId":"142","severity":1,"message":"175","line":10,"column":10,"nodeType":"144","messageId":"145","endLine":10,"endColumn":25},{"ruleId":"142","severity":1,"message":"176","line":34,"column":10,"nodeType":"144","messageId":"145","endLine":34,"endColumn":18},{"ruleId":"154","severity":1,"message":"155","line":41,"column":11,"nodeType":"156","endLine":41,"endColumn":43},{"ruleId":"154","severity":1,"message":"155","line":44,"column":11,"nodeType":"156","endLine":44,"endColumn":43},{"ruleId":"154","severity":1,"message":"155","line":47,"column":11,"nodeType":"156","endLine":47,"endColumn":50},{"ruleId":"154","severity":1,"message":"155","line":50,"column":11,"nodeType":"156","endLine":50,"endColumn":44},{"ruleId":"142","severity":1,"message":"177","line":6,"column":8,"nodeType":"144","messageId":"145","endLine":6,"endColumn":17},{"ruleId":"142","severity":1,"message":"178","line":19,"column":8,"nodeType":"144","messageId":"145","endLine":19,"endColumn":19},{"ruleId":"154","severity":1,"message":"155","line":69,"column":7,"nodeType":"156","endLine":69,"endColumn":25},{"ruleId":"142","severity":1,"message":"179","line":71,"column":20,"nodeType":"144","messageId":"145","endLine":71,"endColumn":36},{"ruleId":"142","severity":1,"message":"180","line":71,"column":54,"nodeType":"144","messageId":"145","endLine":71,"endColumn":65},{"ruleId":"142","severity":1,"message":"181","line":71,"column":67,"nodeType":"144","messageId":"145","endLine":71,"endColumn":75},"no-native-reassign",["182"],"no-negated-in-lhs",["183"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'image' is defined but never used.","'image1' is defined but never used.","'drop' is defined but never used.","'guned' is defined but never used.","'ruled' is defined but never used.","'mine' is defined but never used.","'backgournd' is defined but never used.","'axios' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'SwitchesSize' is defined but never used.","'ClassesNesting' is defined but never used.","'BasicTextFields' is defined but never used.","'tab' is assigned a value but never used.","'setTab' is assigned a value but never used.","'guns' is assigned a value but never used.","'setGuns' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'name'. Either include it or remove the dependency array.","ArrayExpression",["184"],"'Achievements' is defined but never used.","'PrimarySearchAppBar' is defined but never used.","'gunsArr' is assigned a value but never used.","'CardActions' is defined but never used.","'Button' is defined but never used.","'favs' is assigned a value but never used.","'deaths' is assigned a value but never used.","'BackgroundColor' is defined but never used.","'platform' is assigned a value but never used.","'CardMedia' is defined but never used.","'ReactPlayer' is defined but never used.","'onSelectAllClick' is assigned a value but never used.","'numSelected' is assigned a value but never used.","'rowCount' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"185","fix":"186"},"Update the dependencies array to be: [name]",{"range":"187","text":"188"},[2190,2192],"[name]"]