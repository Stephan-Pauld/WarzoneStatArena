[{"/home/stefler/lighthouse/yearEnd/statsite/src/index.js":"1","/home/stefler/lighthouse/yearEnd/statsite/src/App.js":"2","/home/stefler/lighthouse/yearEnd/statsite/src/reportWebVitals.js":"3","/home/stefler/lighthouse/yearEnd/statsite/src/DropDown.js":"4","/home/stefler/lighthouse/yearEnd/statsite/src/Navbar.js":"5","/home/stefler/lighthouse/yearEnd/statsite/src/RouterPages/Home.js":"6","/home/stefler/lighthouse/yearEnd/statsite/src/Switch.js":"7","/home/stefler/lighthouse/yearEnd/statsite/src/StatNavBar.js":"8","/home/stefler/lighthouse/yearEnd/statsite/src/images.js":"9","/home/stefler/lighthouse/yearEnd/statsite/src/RouterPages/Profile.js":"10","/home/stefler/lighthouse/yearEnd/statsite/src/StatCard.js":"11","/home/stefler/lighthouse/yearEnd/statsite/src/Achievements.js":"12","/home/stefler/lighthouse/yearEnd/statsite/src/roulette/Roulette.js":"13","/home/stefler/lighthouse/yearEnd/statsite/src/roulette/checkbox.js":"14","/home/stefler/lighthouse/yearEnd/statsite/src/roulette/answers.js":"15","/home/stefler/lighthouse/yearEnd/statsite/src/roulette/rouletteButton.js":"16","/home/stefler/lighthouse/yearEnd/statsite/src/hooks/useApplicationData.js":"17","/home/stefler/lighthouse/yearEnd/statsite/src/TrackedGuns.js":"18","/home/stefler/lighthouse/yearEnd/statsite/src/RouterPages/Stats.js":"19","/home/stefler/lighthouse/yearEnd/statsite/src/GunStats.js":"20"},{"size":240,"mtime":1609039603337,"results":"21","hashOfConfig":"22"},{"size":889,"mtime":1609213447290,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1607888928285,"results":"24","hashOfConfig":"22"},{"size":1472,"mtime":1608446780764,"results":"25","hashOfConfig":"22"},{"size":6478,"mtime":1609124145285,"results":"26","hashOfConfig":"22"},{"size":350,"mtime":1608448880107,"results":"27","hashOfConfig":"22"},{"size":458,"mtime":1608601351474,"results":"28","hashOfConfig":"22"},{"size":1063,"mtime":1609124702906,"results":"29","hashOfConfig":"22"},{"size":4502,"mtime":1609271884638,"results":"30","hashOfConfig":"22"},{"size":3118,"mtime":1609360301321,"results":"31","hashOfConfig":"22"},{"size":1380,"mtime":1609122824044,"results":"32","hashOfConfig":"22"},{"size":442,"mtime":1609211816249,"results":"33","hashOfConfig":"22"},{"size":4260,"mtime":1609039603337,"results":"34","hashOfConfig":"22"},{"size":677,"mtime":1609039603337,"results":"35","hashOfConfig":"22"},{"size":1576,"mtime":1609039603337,"results":"36","hashOfConfig":"22"},{"size":940,"mtime":1609039603337,"results":"37","hashOfConfig":"22"},{"size":1315,"mtime":1609211232959,"results":"38","hashOfConfig":"22"},{"size":1184,"mtime":1609358611673,"results":"39","hashOfConfig":"22"},{"size":2930,"mtime":1609357575562,"results":"40","hashOfConfig":"22"},{"size":1542,"mtime":1609277403479,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"qnt7n7",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"44"},"/home/stefler/lighthouse/yearEnd/statsite/src/index.js",[],["90","91"],"/home/stefler/lighthouse/yearEnd/statsite/src/App.js",[],"/home/stefler/lighthouse/yearEnd/statsite/src/reportWebVitals.js",[],["92","93"],"/home/stefler/lighthouse/yearEnd/statsite/src/DropDown.js",["94"],"/home/stefler/lighthouse/yearEnd/statsite/src/Navbar.js",[],"/home/stefler/lighthouse/yearEnd/statsite/src/RouterPages/Home.js",["95"],"import React from 'react'\n\n\n\nexport default function Home() {\n  return (\n    <div>\n      <h1>This is the home page</h1>\n\n    </div>\n  )\n}\n\n\n\n\n{/* <div id=\"twitch-embed\"></div>\n<script src=\"https://player.twitch.tv/js/embed/v1.js\"></script>\n\n<script type=\"text/javascript\">\n  new Twitch.Player(\"twitch-embed\", {\n    channel: \"shroud\"\n});\n</script> */}","/home/stefler/lighthouse/yearEnd/statsite/src/Switch.js",[],["96","97"],"/home/stefler/lighthouse/yearEnd/statsite/src/StatNavBar.js",[],"/home/stefler/lighthouse/yearEnd/statsite/src/images.js",[],"/home/stefler/lighthouse/yearEnd/statsite/src/RouterPages/Profile.js",["98","99","100"],"/home/stefler/lighthouse/yearEnd/statsite/src/StatCard.js",["101"],"import React from 'react'\n\nexport default function StatCard(props) {\n  const {image, hits, kills, kd, headshots, accuracy, shots, gunName, onAdd} = props;\n\n\n\n  const checkStats = () => {\n    if (kills > 50) {\n      return (\n        <img class=\"achiev-icons\" src=\"https://www.flaticon.com/svg/static/icons/svg/3135/3135783.svg\" />\n      )\n    }\n  }\n\n  return (\n    <div class=\"container\">\n      <div class=\"card\">\n        <div class=\"face face1\">\n          <button onClick={() => onAdd(gunName)} >{gunName}</button>\n          <div class=\"content\">\n            <div class='gun-flex'>\n              <img class=\"gun-icon\" src={image} alt=\"\" />\n            </div>\n          </div>\n        </div>\n        <div class=\"face face2\">\n          <div class=\"top-row\">\n            <h4>Hits</h4>\n            <h4>Kills</h4>\n            <h4>KD</h4>\n            <h4>HeadShots</h4>\n            <h4>Acc</h4>\n            <h4>Shots</h4>\n          </div>\n          <div class=\"top-row\">\n            <h5>{hits}</h5>\n            <h5>{kills}</h5>\n            <h5>{kd}</h5>\n            <h5>{headshots}</h5>\n            <h5>{accuracy}</h5>\n            <h5>{shots}</h5>\n          </div>\n          <div class=\"achievements\">\n            <h5>Achievements</h5>\n            <hr></hr>\n            <div>\n            {checkStats()}\n            </div>\n          </div>\n\n        </div>\n      </div>\n    </div>\n  );\n}\n","/home/stefler/lighthouse/yearEnd/statsite/src/Achievements.js",[],"/home/stefler/lighthouse/yearEnd/statsite/src/roulette/Roulette.js",["102","103","104","105"],"import React, { useState } from \"react\";\nimport \"../checkbox.css\";\nimport SwitchesSize from \"./checkbox\";\nimport MediaCard from \"./answers\";\nimport useApplicationData from \"../hooks/useApplicationData\";\nimport ClassesNesting from \"./rouletteButton\";\nimport image from \"../img/trainstation-weapon.jpeg\";\nimport image1 from \"../img/trainstation-secondary.png\";\nimport drop from \"../img/droped.jpeg\";\nimport guned from \"../img/loadout.jpg\";\nimport ruled from \"../img/ruled.jpg\";\nimport mine from \"../img/mine1.png\";\n\nexport default function Roulette(props) {\n\n\n  const {\n    state,\n  } = useApplicationData();\n\n  const[primaryChecked, setPrimaryChecked] = useState(false)\n  const[secondaryChecked, setSecondaryChecked] = useState(false)\n  const[dropzoneChecked, setDropzoneChecked] = useState(false)\n  const[rulesChecked, setRulesChecked] = useState(false)\n \n  const[selected, setSelected] = useState({\n    rule:[],\n    primary:[],\n    primaryClass:[],\n    secondary:[],\n    secondaryClass:[],\n    dropzone:[],\n    primaryImage:[],\n    secondaryImage:image1,\n    dropzoneImage:[]\n  })\n  \n  \n  function generateRoulette(props) {\n    //data\n    let weapon = state.guns;\n    let rules = state.rules;\n    let dropzone = state.dropzone;\n\n    //Primary Weapon\n    let allowableChars1 = Math.floor(Math.random()*weapon.length);\n    const primary = weapon[allowableChars1]\n    console.log(primary.image);\n    if (primaryChecked) {\n      setSelected(prev => ({\n        ...prev,\n        primary: primary.weapon,\n        primaryImage:\"../img/trainstation-weapon.jpeg\",\n        primaryClass: primary.class\n\n      \n      }))\n\n      \n    }\n  \n\n    //Secondary Weapon\n     let allowableChars2 = Math.floor(Math.random()*weapon.length);\n    let secondary;\n    if (allowableChars1 !== allowableChars2) {\n      secondary = weapon[allowableChars2]\n    } else {\n      secondary = \"any secondary Gun\"\n    };\n    console.log(secondary.image)\n    if (secondaryChecked) {\n      setSelected(prev => ({\n        ...prev,\n        secondary: secondary.weapon,\n        secondaryClass: secondary.class\n        \n      }))\n    } \n    \n  \n\n    //dropZones\n    let allowableChars = Math.floor(Math.random()*dropzone.length);\n    const dropZones = dropzone[allowableChars]\n    if (dropzoneChecked) {\n      setSelected(prev => ({\n        ...prev,\n        dropzone:dropZones.dropzone\n      }))\n    }\n\n    \n    //rules\n    let allowableChars3 = Math.floor(Math.random()*rules.length);\n    const rule = rules[allowableChars3];\n    if (rulesChecked) {\n      \n      setSelected(prev => ({\n        ...prev,\n        rule:rule.rules,\n      }))\n    } \n\n  }\n  //console.log(selected.secondaryImage);\n  return (\n    <div className=\"Roulette\">\n        <div className=\"answers\">\n          <div className=\"test\">\n            <MediaCard \n              title= \"Primary Gun\" \n              selected={selected.primary} class= {selected.primaryClass} \n              image={selected.primaryImage} \n              checked={primaryChecked}\n              onChange = {() => setPrimaryChecked(!primaryChecked)}\n            />\n\n            <MediaCard \n              title= \"Secondary Gun\" \n              selected= {selected.secondary} \n              class= {selected.secondaryClass} \n              image={guned} \n              checked={secondaryChecked}\n              onChange = {() => setSecondaryChecked (!secondaryChecked)}\n            />\n          </div>\n          Press on the Proximity Mine bellow to roll\n          <div>\n            <MediaCard \n              title= \"Drop Zone\" \n              selected= {selected.dropzone} \n              image={drop} \n              className=\"size\"\n              checked={dropzoneChecked}\n              onChange = {() => setDropzoneChecked(!dropzoneChecked)}\n            />\n                \n            <MediaCard \n              title= \"Rules\" \n              selected= {selected.rule} \n              image={ruled} \n              checked={rulesChecked}\n              onChange = {() => setRulesChecked(!rulesChecked)}\n            />\n           \n          </div>\n        </div>\n        <div className=\"checkbox\">\n        \n            <img \n              className=\"button\" \n              src={mine} onClick={generateRoulette}\n            />\n          \n        </div> \n    </div>\n    \n  )\n}","/home/stefler/lighthouse/yearEnd/statsite/src/roulette/checkbox.js",[],"/home/stefler/lighthouse/yearEnd/statsite/src/roulette/answers.js",["106","107","108"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport SwitchesSize from \"./checkbox\";\nimport ClassesNesting from \"./rouletteButton\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 500,\n    maxWidth: 500,\n    minHeight: 400,\n    maxHeight: 400,\n    margin: 20,\n\n  },\n  media: {\n    height: 200,\n  },\n  text: {\n   fontFamily: \"Times New Roman, serif\",\n   fontSize: 30,\n  }\n});\n\nexport default function MediaCard(props) {\n  const classes = useStyles();\n  \n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          image={props.image}\n          title={props.title}\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\" className={classes.text}>\n           <SwitchesSize \n            label={props.title} checked={props.checked} onChange={props.onChange}/>\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={classes.text}>\n          {props.selected}\n          <br/>\n          {props.class}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      \n    </Card>\n  );\n}","/home/stefler/lighthouse/yearEnd/statsite/src/roulette/rouletteButton.js",[],"/home/stefler/lighthouse/yearEnd/statsite/src/hooks/useApplicationData.js",[],"/home/stefler/lighthouse/yearEnd/statsite/src/TrackedGuns.js",["109","110"],"/home/stefler/lighthouse/yearEnd/statsite/src/RouterPages/Stats.js",["111","112","113","114"],"/home/stefler/lighthouse/yearEnd/statsite/src/GunStats.js",["115","116","117"],"import React, { useState } from 'react'\nimport axios from 'axios'\nimport './stats.css'\nimport StatCard from './StatCard.js'\n\n\nconst favs = []\nexport default function GunImage(props) {\n  const { shown, gunImgs } = props\n  // Looping through whatever specific category was selected!\n\n  // WE CAN ADD SORTING HERE gun.kills or gun.headshots\n  const weapons = Object.keys(shown).map((gun) => {\n    const hits = shown[gun].properties.hits\n    const kills = shown[gun].properties.kills\n    const kdRatio = Math.round(shown[gun].properties.kdRatio * 100) / 100\n    const accuracy = Math.round(shown[gun].properties.accuracy * 100) / 100\n    const shots = shown[gun].properties.shots\n    const deaths = shown[gun].properties.deaths\n    const headShots = shown[gun].properties.headshots\n    const image = gunImgs[gun]\n\n    const onButtonClick = (gun) => {\n      const  gunObj = {\n        gun,\n        hits,\n        kills,\n        kdRatio,\n        accuracy,\n        shots,\n        headShots,\n        image,\n      }\n\n      axios\n        .post(\"http://localhost:3030/trackedstats/addnew\", gunObj)\n        .then(res => {\n          console.log(res);\n        })\n        .catch(err => {\n          console.log(err);\n        })\n    }\n    return (\n      <StatCard\n        gunName={gun}\n        image={gunImgs[gun]}\n        hits={hits}\n        kills={kills}\n        kd={kdRatio}\n        headshots={headShots}\n        accuracy={accuracy}\n        shots={shots}\n        onAdd={onButtonClick}\n      />\n    )\n  });\n\n  return (\n    <>\n      {weapons}\n    </>\n  )\n\n}\n\n\n",{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"118","replacedBy":"122"},{"ruleId":"120","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":38,"column":1,"nodeType":"126","messageId":"127","endLine":50,"endColumn":18},{"ruleId":"124","severity":1,"message":"125","line":17,"column":1,"nodeType":"126","messageId":"127","endLine":24,"endColumn":14},{"ruleId":"118","replacedBy":"128"},{"ruleId":"120","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":1,"column":38,"nodeType":"132","messageId":"133","endLine":1,"endColumn":48},{"ruleId":"130","severity":1,"message":"134","line":1,"column":50,"nodeType":"132","messageId":"133","endLine":1,"endColumn":68},{"ruleId":"135","severity":1,"message":"136","line":33,"column":76,"nodeType":"137","messageId":"138","endLine":33,"endColumn":78},{"ruleId":"139","severity":1,"message":"140","line":11,"column":9,"nodeType":"141","endLine":11,"endColumn":106},{"ruleId":"130","severity":1,"message":"142","line":3,"column":8,"nodeType":"132","messageId":"133","endLine":3,"endColumn":20},{"ruleId":"130","severity":1,"message":"143","line":6,"column":8,"nodeType":"132","messageId":"133","endLine":6,"endColumn":22},{"ruleId":"130","severity":1,"message":"144","line":7,"column":8,"nodeType":"132","messageId":"133","endLine":7,"endColumn":13},{"ruleId":"139","severity":1,"message":"140","line":151,"column":13,"nodeType":"141","endLine":154,"endColumn":15},{"ruleId":"130","severity":1,"message":"145","line":5,"column":8,"nodeType":"132","messageId":"133","endLine":5,"endColumn":19},{"ruleId":"130","severity":1,"message":"146","line":8,"column":8,"nodeType":"132","messageId":"133","endLine":8,"endColumn":14},{"ruleId":"130","severity":1,"message":"143","line":11,"column":8,"nodeType":"132","messageId":"133","endLine":11,"endColumn":22},{"ruleId":"130","severity":1,"message":"147","line":1,"column":17,"nodeType":"132","messageId":"133","endLine":1,"endColumn":25},{"ruleId":"130","severity":1,"message":"148","line":3,"column":8,"nodeType":"132","messageId":"133","endLine":3,"endColumn":13},{"ruleId":"130","severity":1,"message":"149","line":28,"column":10,"nodeType":"132","messageId":"133","endLine":28,"endColumn":13},{"ruleId":"130","severity":1,"message":"150","line":28,"column":15,"nodeType":"132","messageId":"133","endLine":28,"endColumn":21},{"ruleId":"130","severity":1,"message":"151","line":29,"column":10,"nodeType":"132","messageId":"133","endLine":29,"endColumn":14},{"ruleId":"130","severity":1,"message":"152","line":29,"column":16,"nodeType":"132","messageId":"133","endLine":29,"endColumn":23},{"ruleId":"130","severity":1,"message":"147","line":1,"column":17,"nodeType":"132","messageId":"133","endLine":1,"endColumn":25},{"ruleId":"130","severity":1,"message":"153","line":7,"column":7,"nodeType":"132","messageId":"133","endLine":7,"endColumn":11},{"ruleId":"130","severity":1,"message":"154","line":19,"column":11,"nodeType":"132","messageId":"133","endLine":19,"endColumn":17},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],["155"],["156"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock",["155"],["156"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'globalStateContext' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'SwitchesSize' is defined but never used.","'ClassesNesting' is defined but never used.","'image' is defined but never used.","'CardActions' is defined but never used.","'Button' is defined but never used.","'useState' is defined but never used.","'axios' is defined but never used.","'tab' is assigned a value but never used.","'setTab' is assigned a value but never used.","'guns' is assigned a value but never used.","'setGuns' is assigned a value but never used.","'favs' is assigned a value but never used.","'deaths' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]