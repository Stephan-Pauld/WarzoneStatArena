[{"/home/stefler/lighthouse/yearEnd/statsite/src/index.js":"1","/home/stefler/lighthouse/yearEnd/statsite/src/App.js":"2","/home/stefler/lighthouse/yearEnd/statsite/src/RouterPages/Profile.js":"3","/home/stefler/lighthouse/yearEnd/statsite/src/roulette/Roulette.js":"4","/home/stefler/lighthouse/yearEnd/statsite/src/Navbar.js":"5","/home/stefler/lighthouse/yearEnd/statsite/src/RouterPages/Home.js":"6","/home/stefler/lighthouse/yearEnd/statsite/src/RouterPages/Stats.js":"7","/home/stefler/lighthouse/yearEnd/statsite/src/hooks/useApplicationData.js":"8","/home/stefler/lighthouse/yearEnd/statsite/src/TrackedGuns.js":"9","/home/stefler/lighthouse/yearEnd/statsite/src/roulette/answers.js":"10","/home/stefler/lighthouse/yearEnd/statsite/src/roulette/rouletteButton.js":"11","/home/stefler/lighthouse/yearEnd/statsite/src/roulette/checkbox.js":"12","/home/stefler/lighthouse/yearEnd/statsite/src/textField.js":"13","/home/stefler/lighthouse/yearEnd/statsite/src/platform.js":"14","/home/stefler/lighthouse/yearEnd/statsite/src/news.js":"15","/home/stefler/lighthouse/yearEnd/statsite/src/leaderboard.js":"16","/home/stefler/lighthouse/yearEnd/statsite/src/images.js":"17","/home/stefler/lighthouse/yearEnd/statsite/src/Stats/GameModeNavBar.js":"18","/home/stefler/lighthouse/yearEnd/statsite/src/Stats/GunNavBar.js":"19","/home/stefler/lighthouse/yearEnd/statsite/src/Stats/GunStats.js":"20","/home/stefler/lighthouse/yearEnd/statsite/src/Stats/GameModeStats.js":"21","/home/stefler/lighthouse/yearEnd/statsite/src/Stats/CategoryNavBar.js":"22","/home/stefler/lighthouse/yearEnd/statsite/src/Stats/StatCard.js":"23","/home/stefler/lighthouse/yearEnd/statsite/src/helpers/getStatsForFavorites.js":"24"},{"size":240,"mtime":1609445288911,"results":"25","hashOfConfig":"26"},{"size":1386,"mtime":1609390447982,"results":"27","hashOfConfig":"26"},{"size":2476,"mtime":1609630970338,"results":"28","hashOfConfig":"26"},{"size":4262,"mtime":1609390447982,"results":"29","hashOfConfig":"26"},{"size":6478,"mtime":1609387376142,"results":"30","hashOfConfig":"26"},{"size":3526,"mtime":1609389089125,"results":"31","hashOfConfig":"26"},{"size":4545,"mtime":1610725848771,"results":"32","hashOfConfig":"26"},{"size":2101,"mtime":1609389089125,"results":"33","hashOfConfig":"26"},{"size":2352,"mtime":1610725848771,"results":"34","hashOfConfig":"26"},{"size":1576,"mtime":1609039603337,"results":"35","hashOfConfig":"26"},{"size":940,"mtime":1609039603337,"results":"36","hashOfConfig":"26"},{"size":678,"mtime":1609389089129,"results":"37","hashOfConfig":"26"},{"size":742,"mtime":1609389089129,"results":"38","hashOfConfig":"26"},{"size":1678,"mtime":1609389089129,"results":"39","hashOfConfig":"26"},{"size":4374,"mtime":1609389089129,"results":"40","hashOfConfig":"26"},{"size":10761,"mtime":1609389089129,"results":"41","hashOfConfig":"26"},{"size":4502,"mtime":1609387376146,"results":"42","hashOfConfig":"26"},{"size":1082,"mtime":1609566914921,"results":"43","hashOfConfig":"26"},{"size":1063,"mtime":1609566914921,"results":"44","hashOfConfig":"26"},{"size":1538,"mtime":1610725848771,"results":"45","hashOfConfig":"26"},{"size":1134,"mtime":1609630970338,"results":"46","hashOfConfig":"26"},{"size":882,"mtime":1609566914921,"results":"47","hashOfConfig":"26"},{"size":966,"mtime":1610725848771,"results":"48","hashOfConfig":"26"},{"size":1146,"mtime":1610725848771,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"qnt7n7",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"/home/stefler/lighthouse/yearEnd/statsite/src/index.js",[],["110","111"],"/home/stefler/lighthouse/yearEnd/statsite/src/App.js",[],"/home/stefler/lighthouse/yearEnd/statsite/src/RouterPages/Profile.js",["112","113"],"import React, { useState, useEffect } from 'react'\nimport axios from 'axios';\nimport '../stats.css'\nimport TrackedGuns from '../TrackedGuns.js'\n\n\n\nexport default function Profile(props) {\n  const [state, setState] = useState({\n    favorites: [],\n    achievements: [],\n    displayedCards: [],\n  })\n\n\n  useEffect(() => {\n    Promise.all([\n      axios.get('http://localhost:3030/trackedstats/trackedfavs'),\n      axios.get('http://localhost:3030/achievements')\n    ])\n      .then(([favorites, achievements]) => {\n\n       \n        setState(prev => ({\n          ...prev,\n          favorites: favorites.data,\n          achievements: achievements.data,\n        }))\n      })\n\n      .catch(error => {\n        console.log(\"WE GOT AN ERROR\");\n        console.log(error);\n      })\n\n  }, [state.displayedCards])\n  // console.log(state.trackedStats);\n\n\n\n\n  const earnedAchievements = (gun) => state.achievements.map((achievement) => {\n    let hasHitFlag = false;\n    //#################3\n    // MAKE ACHIEVE FOR KILL COUNT AND ACCURACY \n    if ((gun.headShots >= achievement.headshots) && (achievement.headshots != null)) {\n      hasHitFlag = true;\n    }\n    if ((gun.accuracy <= achievement.accuracy) && (achievement.accuracy != null)) {\n      hasHitFlag = true;\n    }\n    if ((gun.kdRatio >= achievement.kdratio) && (achievement.kdratio != null)) {\n      hasHitFlag = true;\n    }\n    // add else if it always does this if all 3 are true\n    if (hasHitFlag) {\n      return <img className=\"achiev-icons\" src={achievement.badge} alt=\"\" />\n    }\n  })\n\n\n\n\n  const deleteStat = (stat) => {\n    const cardShown = state.displayedCards.filter(item => item !== stat)\n    setState(prev => ({\n      ...prev,\n      displayedCards: cardShown\n    }))\n  }\n\n\n\n  if (state.favorites.length > 0) {\n\n    return (\n      <TrackedGuns\n        favorites={state.favorites}\n        displayedCards={state.displayedCards}\n        deleteStat={deleteStat}\n        achievements={earnedAchievements}\n        // image={fixed.image}\n      />\n    )\n\n    return (\n      <>\n        <div className=\"fav-guns-container\">\n          {/* {favItems} */}\n          <h1>cats</h1>\n        </div>\n        <div>\n          <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"center\" }}>\n          </div>\n        </div>\n      </>\n    )\n  } else {\n    return (\n      <>\n        <h1>Empty</h1>\n        <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"center\" }}>\n        </div>\n      </>\n    )\n  }\n\n}\n","/home/stefler/lighthouse/yearEnd/statsite/src/roulette/Roulette.js",["114","115","116","117"],"import React, { useState } from \"react\";\nimport \"../checkbox.css\";\nimport SwitchesSize from \"./checkbox\";\nimport MediaCard from \"./answers\";\nimport useApplicationData from \"../hooks/useApplicationData\";\nimport ClassesNesting from \"./rouletteButton\";\nimport image from \"../img/trainstation-weapon.jpeg\";\nimport image1 from \"../img/trainstation-secondary.png\";\nimport drop from \"../img/droped.jpeg\";\nimport guned from \"../img/loadout.jpg\";\nimport ruled from \"../img/ruled.jpg\";\nimport mine from \"../img/mine1.png\";\nexport default function Roulette(props) {\n\n\n  const {\n    state,\n  } = useApplicationData();\n\n  const[primaryChecked, setPrimaryChecked] = useState(false)\n  const[secondaryChecked, setSecondaryChecked] = useState(false)\n  const[dropzoneChecked, setDropzoneChecked] = useState(false)\n  const[rulesChecked, setRulesChecked] = useState(false)\n \n  const[selected, setSelected] = useState({\n    rule:[],\n    primary:[],\n    primaryClass:[],\n    secondary:[],\n    secondaryClass:[],\n    dropzone:[],\n    primaryImage:[],\n    secondaryImage:image1,\n    dropzoneImage:[]\n  })\n  \n  \n  function generateRoulette(props) {\n    //data\n    let weapon = state.guns;\n    let rules = state.rules;\n    let dropzone = state.dropzone;\n\n    //Primary Weapon\n    let allowableChars1 = Math.floor(Math.random()*weapon.length);\n    const primary = weapon[allowableChars1]\n    // console.log(primary.image);\n    if (primaryChecked) {\n      setSelected(prev => ({\n        ...prev,\n        primary: primary.weapon,\n        primaryImage:\"../img/trainstation-weapon.jpeg\",\n        primaryClass: primary.class\n\n      \n      }))\n\n      \n    }\n  \n\n    //Secondary Weapon\n     let allowableChars2 = Math.floor(Math.random()*weapon.length);\n    let secondary;\n    if (allowableChars1 !== allowableChars2) {\n      secondary = weapon[allowableChars2]\n    } else {\n      secondary = \"any secondary Gun\"\n    };\n    console.log(secondary.image)\n    if (secondaryChecked) {\n      setSelected(prev => ({\n        ...prev,\n        secondary: secondary.weapon,\n        secondaryClass: secondary.class\n        \n      }))\n    } \n    \n  \n\n    //dropZones\n    let allowableChars = Math.floor(Math.random()*dropzone.length);\n    const dropZones = dropzone[allowableChars]\n    if (dropzoneChecked) {\n      setSelected(prev => ({\n        ...prev,\n        dropzone:dropZones.dropzone\n      }))\n    }\n\n    \n    //rules\n    let allowableChars3 = Math.floor(Math.random()*rules.length);\n    const rule = rules[allowableChars3];\n    if (rulesChecked) {\n      \n      setSelected(prev => ({\n        ...prev,\n        rule:rule.rules,\n      }))\n    } \n\n  }\n  //console.log(selected.secondaryImage);\n  return (\n    <div className=\"Roulette\">\n        <div className=\"answers\">\n          <div className=\"test\">\n            <MediaCard \n              title= \"Primary Gun\" \n              selected={selected.primary} class= {selected.primaryClass} \n              image={selected.primaryImage} \n              checked={primaryChecked}\n              onChange = {() => setPrimaryChecked(!primaryChecked)}\n            />\n\n            <MediaCard \n              title= \"Secondary Gun\" \n              selected= {selected.secondary} \n              class= {selected.secondaryClass} \n              image={guned} \n              checked={secondaryChecked}\n              onChange = {() => setSecondaryChecked (!secondaryChecked)}\n            />\n          </div>\n          Press on the Proximity Mine bellow to roll\n          <div>\n            <MediaCard \n              title= \"Drop Zone\" \n              selected= {selected.dropzone} \n              image={drop} \n              className=\"size\"\n              checked={dropzoneChecked}\n              onChange = {() => setDropzoneChecked(!dropzoneChecked)}\n            />\n                \n            <MediaCard \n              title= \"Rules\" \n              selected= {selected.rule} \n              image={ruled} \n              checked={rulesChecked}\n              onChange = {() => setRulesChecked(!rulesChecked)}\n            />\n           \n          </div>\n        </div>\n        <div className=\"checkbox\">\n        \n            <img \n              className=\"button\" \n              src={mine} onClick={generateRoulette}\n            />\n          \n        </div> \n    </div>\n    \n  )\n}","/home/stefler/lighthouse/yearEnd/statsite/src/Navbar.js",[],"/home/stefler/lighthouse/yearEnd/statsite/src/RouterPages/Home.js",["118","119","120","121","122","123","124","125","126","127"],"import React, {useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport image from \"../img/trainstation-weapon.jpeg\";\nimport image1 from \"../img/trainstation-secondary.png\";\nimport drop from \"../img/droped.jpeg\";\nimport guned from \"../img/loadout.jpg\";\nimport ruled from \"../img/ruled.jpg\";\nimport mine from \"../img/mine1.png\";\nimport backgournd from \"../img/warzone8.jpg\";\nimport Button from '@material-ui/core/Button';\nimport axios from 'axios';\nimport twitch from \"../img/twitch.png\";\nimport BasicTextFields from \"../textField\";\nimport GroupSizesColors from \"../platform\";\nimport RecipeReviewCard from \"../news\";\nimport EnhancedTable from \"../leaderboard\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    color: theme.palette.text.secondary,\n    textAlign: 'center',\n    height: 500,\n    background: \"lightblue\" ,\n    display: \"flex\",\n    justifyContent: \"space-between\"\n\n    \n  },\n  shoot: {\n    background: '#a970ff',\n    borderRadius: 3,\n    border: 0,\n    color: \"white\",\n    fontWeight: 'bold',\n    fontSize:'22px',\n    fontFamily:'Lucidatypewriter, monospace',\n    width: '400px',\n    height: 48,\n    padding: '0 30px',\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n  },\n  label: {\n    textTransform: 'capitalize',\n  },\n  img: {\n    height: 40,\n    width: 45,\n    paddingLeft: 10,\n    \n  },\n  gameId: {\n    display: \"flex\",\n    justifyContent: \"center\"\n\n  }\n}));\n\n/* function click () {\n  Axios.post(\"http://localhost:3000/auth/twitch/callback\", (req, res) => {\n    res.redirect(\"http://localhost:3000/auth/twitch/callback\");\n  })\n} */\n\nexport default function Home({name, setName, nickname, yoo, setPlatform}) {\n  const classes = useStyles();\n  \n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Paper className={classes.paper} >\n          <p>\n            <h1>\n              Welcome\n            </h1>\n            <br/>\n            <h2>\n              to StatSite\n            </h2>\n          </p>\n          <div className={classes.gameId}>\n            <GroupSizesColors \n              onClick={setPlatform}\n            />\n            <BasicTextFields \n              value={name}\n              onChange={setName}\n              onClick={nickname}\n            />\n          </div>\n          <Button className={classes.shoot} href= \"http://localhost:3000/auth/twitch/callback\">\n            Login With Twitch\n            <img className={classes.img} src={twitch}/>\n          </Button>\n          \n          \n          </Paper>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Paper className={classes.paper}>\n          <EnhancedTable/>\n          </Paper>\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <Paper className={classes.paper}>\n          <EnhancedTable/>\n          </Paper>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <Paper className={classes.paper}><RecipeReviewCard/></Paper>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <Paper className={classes.paper}><RecipeReviewCard/></Paper>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <Paper className={classes.paper}><RecipeReviewCard/></Paper>\n        </Grid>\n        <Grid item xs={6} sm={3}>\n          <Paper className={classes.paper}><RecipeReviewCard/></Paper>\n        </Grid>\n      </Grid>\n      \n    </div>\n  );\n}\n\n\n\n\n","/home/stefler/lighthouse/yearEnd/statsite/src/RouterPages/Stats.js",["128","129","130"],"/home/stefler/lighthouse/yearEnd/statsite/src/hooks/useApplicationData.js",[],"/home/stefler/lighthouse/yearEnd/statsite/src/TrackedGuns.js",["131","132"],"import React, { useEffect, useState } from 'react'\nimport './stats.css'\nimport axios from 'axios';\nimport getStatsForFavorites from './helpers/getStatsForFavorites'\n\nexport default function TrackedGuns(props) {\n  const { favorites, deleteStat, achievements, displayedCards } = props\n  const [trackedStats, setTrackedStats] = useState([])\n  console.log(\"CHECKING\");\n\n  useEffect(() => {\n    return getStatsForFavorites(favorites).then(data => {\n      setTrackedStats(data)\n    })\n  }, [displayedCards])\n\n  // useEffect(() => {\n  // }, [trackedStats])\n\n  return favorites.map((fav, index) => {\n    // console.log(fav);\n    const fixed = JSON.parse(fav.tracked);\n    displayedCards.push(fixed.gun)\n    const removedItem = { gunName: fixed.gun }\n    // console.log(trackedStats[index]);\n\n\n    const loopTrackedStats = () => {\n      const stats = [];\n      for (const stat in trackedStats[index]) {\n        console.log('stat');\n        stats.push(<h4>{stat}: {trackedStats[index][stat]}</h4>)\n      }\n      return stats;\n    }\n\n\n    const removeStat = () => {\n      axios\n        // change to .delete\n        .post(\"http://localhost:3030/trackedstats/removestat\", removedItem)\n        .then((res) => {\n          deleteStat(fixed.gun)\n        })\n        .catch((err) => {\n          console.log(err);\n        })\n    }\n\n    return (\n      <>\n        <div>\n          <div className=\"fav-gun-card\">\n            <div className=\"card-img\">\n              <img className=\"fav-gun-icon\" src={fixed.image} alt=\"\" />\n            </div>\n\n            <div>\n              <button onClick={() => removeStat(fixed.gun)}>Remove</button>\n              <div className=\"right-side\">\n                <h3 style={{ textAlign: 'center' }}>{fixed.gun}</h3>\n                <hr />\n              </div>\n              <div>\n                {loopTrackedStats()}\n              </div>\n              <hr />\n              <div>\n                <h3 style={{ textAlign: 'center' }}>achives</h3>\n              </div>\n              <hr />\n              <div className=\"gun-achieves\">\n                {achievements(fixed.gun)}\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    )\n  })\n}\n\n\n{/* <h5>Kills: {props.kills}</h5>\n<h5>Shots: {props.shots}</h5>\n<h5>Hits: {props.hits}</h5>\n<h5>KD: {props.kdRatio}</h5>\n<h5>Head Shots: {props.headshots}</h5>\n<h5>Accuracy: {props.accuracy}</h5> */}","/home/stefler/lighthouse/yearEnd/statsite/src/roulette/answers.js",["133","134","135"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport SwitchesSize from \"./checkbox\";\nimport ClassesNesting from \"./rouletteButton\";\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 500,\n    maxWidth: 500,\n    minHeight: 400,\n    maxHeight: 400,\n    margin: 20,\n\n  },\n  media: {\n    height: 200,\n  },\n  text: {\n   fontFamily: \"Times New Roman, serif\",\n   fontSize: 30,\n  }\n});\n\nexport default function MediaCard(props) {\n  const classes = useStyles();\n  \n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          image={props.image}\n          title={props.title}\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\" className={classes.text}>\n           <SwitchesSize \n            label={props.title} checked={props.checked} onChange={props.onChange}/>\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" className={classes.text}>\n          {props.selected}\n          <br/>\n          {props.class}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      \n    </Card>\n  );\n}","/home/stefler/lighthouse/yearEnd/statsite/src/roulette/rouletteButton.js",[],"/home/stefler/lighthouse/yearEnd/statsite/src/roulette/checkbox.js",[],"/home/stefler/lighthouse/yearEnd/statsite/src/textField.js",["136","137"],"import React, {useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport axios from \"axios\";\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch',\n      \n      height: 55\n      \n    },\n  },\n}));\n\n\n\n\nexport default function BasicTextFields(props) {\n  const classes = useStyles();\n\n   return (\n    <form className={classes.root} noValidate autoComplete=\"off\"  onSubmit={(event) => event.preventDefault()}>\n      <TextField id=\"outlined-basic\" label=\"GAMER ID\" variant=\"outlined\" value={props.value} onChange={props.onChange}/>\n      <button onClick={props.onClick}/>\n    </form>\n  ); \n  \n}\n\n\n","/home/stefler/lighthouse/yearEnd/statsite/src/platform.js",["138","139","140","141","142","143"],"import React, {useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport { makeStyles } from '@material-ui/core/styles';\nimport battlenet from \"./img/battlenet-icon.png\";\nimport xbox from \"./img/xbox2.png\";\nimport psn from \"./img/psn-icon.png\";\nimport Mw from \"./img/Cod-icon.png\";\nimport \"./checkbox.css\"\nimport { BackgroundColor } from 'chalk';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    '& > *': {\n      margin: theme.spacing(1),\n      height: 55,\n      \n    },\n    '&:focus': {\n      background:\"red\",\n    },\n    img: {\n      width: 48,\n    }\n  },\n}));\n\nexport default function GroupSizesColors(props) {\n  const classes = useStyles();\n  function test1 (platform) {\n    props.onClick(platform);\n    return;\n  }\n  //console.log(platform);\n  return (\n    <div className={classes.root}>\n      <ButtonGroup size=\"large\" color=\"primary\" aria-label=\"large outlined primary button group\" >\n        {/* give back \"psn\" */}\n        <Button onClick= {()=> test1(\"psn\")}>\n          <img className=\"img\"  src={psn} />\n        </Button> \n        {/* give back \"acti\" */}\n        <Button  onClick= {()=> test1(\"acti\")}>\n          <img  className=\"img\" src={Mw}/>\n        </Button>\n        {/* give back \"battlenet\" */}\n        <Button  onClick= {()=> test1(\"battle\")} >\n          <img  className=\"img\" src={battlenet}/>\n        </Button>\n        {/* give back \"xbox\" */}\n        <Button  onClick= {()=> test1(\"xbox\")} >\n          <img className=\"img\" src={xbox}/>\n        </Button>\n      </ButtonGroup>\n    </div>\n  );\n}","/home/stefler/lighthouse/yearEnd/statsite/src/news.js",["144","145","146"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport twitch from \"./img/twitch.png\";\nimport ReactPlayer from \"react-player\"\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n   \n    \n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\n\nexport default function RecipeReviewCard() {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  return (\n    <Card className={classes.root}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\n            AG\n          </Avatar>\n        }\n        action={\n          <IconButton aria-label=\"settings\">\n            <MoreVertIcon />\n          </IconButton>\n        }\n        title=\"News\"\n        subheader=\"Twitch\"\n      />\n      <img src={twitch}>\n      </img>\n      {/* <ReactPlayer\n        url=\"https://www.twitch.tv/videos/852030079\"\n      /> */}\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton aria-label=\"add to favorites\">\n          <FavoriteIcon />\n        </IconButton>\n        <IconButton aria-label=\"share\">\n          <ShareIcon />\n        </IconButton>\n        <IconButton\n          className={clsx(classes.expand, {\n            [classes.expandOpen]: expanded,\n          })}\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label=\"show more\"\n        >\n          <ExpandMoreIcon />\n        </IconButton>\n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          <Typography paragraph>Method:</Typography>\n          <Typography paragraph>\n            Heat 1/2 cup of the broth in a pot until simmering, add saffron and set aside for 10\n            minutes.\n          </Typography>\n          <Typography paragraph>\n            Heat oil in a (14- to 16-inch) paella pan or a large, deep skillet over medium-high\n            heat. Add chicken, shrimp and chorizo, and cook, stirring occasionally until lightly\n            browned, 6 to 8 minutes. Transfer shrimp to a large plate and set aside, leaving chicken\n            and chorizo in the pan. Add pimentón, bay leaves, garlic, tomatoes, onion, salt and\n            pepper, and cook, stirring often until thickened and fragrant, about 10 minutes. Add\n            saffron broth and remaining 4 1/2 cups chicken broth; bring to a boil.\n          </Typography>\n          <Typography paragraph>\n            Add rice and stir very gently to distribute. Top with artichokes and peppers, and cook\n            without stirring, until most of the liquid is absorbed, 15 to 18 minutes. Reduce heat to\n            medium-low, add reserved shrimp and mussels, tucking them down into the rice, and cook\n            again without stirring, until mussels have opened and rice is just tender, 5 to 7\n            minutes more. (Discard any mussels that don’t open.)\n          </Typography>\n          <Typography>\n            Set aside off of the heat to let rest for 10 minutes, and then serve.\n          </Typography>\n        </CardContent>\n      </Collapse>\n    </Card>\n  );\n}","/home/stefler/lighthouse/yearEnd/statsite/src/leaderboard.js",["147","148","149"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\n\nfunction createData(name, kills, death, KD, Votes) {\n  return { name, kills, death, KD, Votes };\n}\n\nconst rows = [\n  createData('YooGood', 305, 3.7, 67, 4.3),\n  createData('Stephan', 452, 25.0, 51, 4.9),\n  createData('CaprianPrice', 262, 16.0, 24, 6.0),\n  createData('yesSiir', 159, 6.0, 24, 4.0),\n  createData('Mo', 356, 16.0, 49, 3.9),\n];\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Streamers' },\n  { id: 'kills', numeric: true, disablePadding: false, label: 'kills' },\n  { id: 'death', numeric: true, disablePadding: false, label: 'death' },\n  { id: 'KD', numeric: true, disablePadding: false, label: 'k/d' },\n  { id: 'Votes', numeric: true, disablePadding: false, label: 'Votes' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          \n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n          Top Streamer of the week\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function EnhancedTable() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('kills');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.name);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => handleClick(event, row.name)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.name}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                        {row.name}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.kills}</TableCell>\n                      <TableCell align=\"right\">{row.death}</TableCell>\n                      <TableCell align=\"right\">{row.KD}</TableCell>\n                      <TableCell align=\"right\">{row.Votes}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      />\n    </div>\n  );\n}","/home/stefler/lighthouse/yearEnd/statsite/src/images.js",[],"/home/stefler/lighthouse/yearEnd/statsite/src/Stats/GameModeNavBar.js",[],"/home/stefler/lighthouse/yearEnd/statsite/src/Stats/GunNavBar.js",[],"/home/stefler/lighthouse/yearEnd/statsite/src/Stats/GunStats.js",["150","151","152","153"],"import React from 'react'\nimport axios from 'axios'\nimport '../stats.css'\nimport StatCard from './StatCard.js'\n\n\nexport default function GunStats({ shown, gunImgs, gunTab, weapons, gunNavSelected }) {\n  const topRow = []\n\n  const categories = [\"weapon_assault_rifle\", \"weapon_marksman\", \"weapon_sniper\", \"weapon_smg\", \"tacticals\", \"lethals\", \"weapon_lmg\", \"weapon_launcher\", \"weapon_pistol\", \"weapon_shotgun\", \"supers\", \"weapon_other\", \"weapon_melee\"];\n  for (const stat in shown) {\n    topRow.push(shown[stat].properties)\n  }\n\n  const onButtonClick = (gun, img, cat) => {\n    const gunObj = {\n      cat,\n      gun,\n      image: img\n    }\n\n    axios\n      .post(\"http://localhost:3030/trackedstats/addnew\", gunObj)\n      .then(res => {\n        \n      })\n      .catch(err => {\n        console.log(err);\n      })\n  }\n\n\n\n  return topRow.map((gun, i) => {\n    \n    const titles = [];\n    const stats = [];\n\n    Object.keys(gun).map((gunStat, i) => {\n\n      // You can push JSX to an array!!!!!!\n      if (gunStat === \"kdRatio\" || gunStat === \"accuracy\") {\n        titles.push(<h3>{gunStat}</h3>)\n        stats.push(<h3>{gun[gunStat].toFixed(2)}</h3>)\n      } else {\n        titles.push(<h3>{gunStat}</h3>)\n        stats.push(<h3>{gun[gunStat]}</h3>)\n      }\n    })\n    return (\n      <>\n      <StatCard\n        onAdd={onButtonClick}\n        gunName={Object.keys(shown)[i]}\n        image={gunImgs[Object.keys(shown)[i]]}\n        topRow={titles}\n        statsRow={stats}\n        cat={categories[gunNavSelected]}\n      />\n      </>\n    )\n  })\n\n}","/home/stefler/lighthouse/yearEnd/statsite/src/Stats/GameModeStats.js",["154"],"import React from 'react'\nimport '../stats.css'\n\nexport default function GameModeStats(props) {\n  const { shown } = props\n  const topRow = [];\n\n  const modes = [\"Gun Game\", \"Domination\", \"TDM\", \"Headquarters\", \"HardCore Domination\", \"Kill Confirmed Hardcore\", \"King Of The Hill\", \"Kill Confirmed\", \"Headquarters Hardcore\", \"Gunfight\", \"Plunder\", \"WARZONE\", \"Search And Destroy\", \"Grind\", \"Cyber Attack\", \"Team Deathmatch Hardcore\", \"br_all\", \"Search and Destroy Hardcore\", \"Ground War\", \"Cyber Attack HardCore\", \"Infected\"]\n  \n\n  for (const stat in shown) {\n    topRow.push(shown[stat].properties)\n  }\n\n  return topRow.map((stat, i) => {\n    const titles = [];\n    const stats = [];\n    Object.keys(stat).map((thing) => {\n      // You can push JSX to an array!!!!!!\n      titles.push(<h3>{thing}</h3>)\n      stats.push(<h3>{stat[thing]}</h3>)\n    })\n    // You can place the array INSIDE the return and it will loop through!\n    return (\n      <>\n        <h1>{modes[i]}</h1>\n        <div className=\"top-row\">\n          {titles}\n        </div>\n        <div className=\"top-row\">\n          {stats}\n        </div>\n      </>\n    )\n  });\n}\n","/home/stefler/lighthouse/yearEnd/statsite/src/Stats/CategoryNavBar.js",[],"/home/stefler/lighthouse/yearEnd/statsite/src/Stats/StatCard.js",[],"/home/stefler/lighthouse/yearEnd/statsite/src/helpers/getStatsForFavorites.js",[],{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":42,"column":76,"nodeType":"161","messageId":"162","endLine":42,"endColumn":78},{"ruleId":"163","severity":1,"message":"164","line":86,"column":5,"nodeType":"165","messageId":"166","endLine":97,"endColumn":6},{"ruleId":"167","severity":1,"message":"168","line":3,"column":8,"nodeType":"169","messageId":"170","endLine":3,"endColumn":20},{"ruleId":"167","severity":1,"message":"171","line":6,"column":8,"nodeType":"169","messageId":"170","endLine":6,"endColumn":22},{"ruleId":"167","severity":1,"message":"172","line":7,"column":8,"nodeType":"169","messageId":"170","endLine":7,"endColumn":13},{"ruleId":"173","severity":1,"message":"174","line":150,"column":13,"nodeType":"175","endLine":153,"endColumn":15},{"ruleId":"167","severity":1,"message":"176","line":1,"column":16,"nodeType":"169","messageId":"170","endLine":1,"endColumn":24},{"ruleId":"167","severity":1,"message":"172","line":5,"column":8,"nodeType":"169","messageId":"170","endLine":5,"endColumn":13},{"ruleId":"167","severity":1,"message":"177","line":6,"column":8,"nodeType":"169","messageId":"170","endLine":6,"endColumn":14},{"ruleId":"167","severity":1,"message":"178","line":7,"column":8,"nodeType":"169","messageId":"170","endLine":7,"endColumn":12},{"ruleId":"167","severity":1,"message":"179","line":8,"column":8,"nodeType":"169","messageId":"170","endLine":8,"endColumn":13},{"ruleId":"167","severity":1,"message":"180","line":9,"column":8,"nodeType":"169","messageId":"170","endLine":9,"endColumn":13},{"ruleId":"167","severity":1,"message":"181","line":10,"column":8,"nodeType":"169","messageId":"170","endLine":10,"endColumn":12},{"ruleId":"167","severity":1,"message":"182","line":11,"column":8,"nodeType":"169","messageId":"170","endLine":11,"endColumn":18},{"ruleId":"167","severity":1,"message":"183","line":13,"column":8,"nodeType":"169","messageId":"170","endLine":13,"endColumn":13},{"ruleId":"173","severity":1,"message":"174","line":101,"column":13,"nodeType":"175","endLine":101,"endColumn":56},{"ruleId":"167","severity":1,"message":"184","line":23,"column":9,"nodeType":"169","messageId":"170","endLine":23,"endColumn":17},{"ruleId":"185","severity":1,"message":"186","line":44,"column":6,"nodeType":"187","endLine":44,"endColumn":8,"suggestions":"188"},{"ruleId":"167","severity":1,"message":"189","line":72,"column":9,"nodeType":"169","messageId":"170","endLine":72,"endColumn":25},{"ruleId":"185","severity":1,"message":"190","line":15,"column":6,"nodeType":"187","endLine":15,"endColumn":22,"suggestions":"191"},{"ruleId":"192","severity":1,"message":"193","line":84,"column":1,"nodeType":"194","messageId":"195","endLine":89,"endColumn":40},{"ruleId":"167","severity":1,"message":"196","line":5,"column":8,"nodeType":"169","messageId":"170","endLine":5,"endColumn":19},{"ruleId":"167","severity":1,"message":"197","line":8,"column":8,"nodeType":"169","messageId":"170","endLine":8,"endColumn":14},{"ruleId":"167","severity":1,"message":"171","line":11,"column":8,"nodeType":"169","messageId":"170","endLine":11,"endColumn":22},{"ruleId":"167","severity":1,"message":"176","line":1,"column":16,"nodeType":"169","messageId":"170","endLine":1,"endColumn":24},{"ruleId":"167","severity":1,"message":"183","line":4,"column":8,"nodeType":"169","messageId":"170","endLine":4,"endColumn":13},{"ruleId":"167","severity":1,"message":"176","line":1,"column":16,"nodeType":"169","messageId":"170","endLine":1,"endColumn":24},{"ruleId":"167","severity":1,"message":"198","line":10,"column":10,"nodeType":"169","messageId":"170","endLine":10,"endColumn":25},{"ruleId":"173","severity":1,"message":"174","line":44,"column":11,"nodeType":"175","endLine":44,"endColumn":45},{"ruleId":"173","severity":1,"message":"174","line":48,"column":11,"nodeType":"175","endLine":48,"endColumn":43},{"ruleId":"173","severity":1,"message":"174","line":52,"column":11,"nodeType":"175","endLine":52,"endColumn":50},{"ruleId":"173","severity":1,"message":"174","line":56,"column":11,"nodeType":"175","endLine":56,"endColumn":44},{"ruleId":"167","severity":1,"message":"199","line":6,"column":8,"nodeType":"169","messageId":"170","endLine":6,"endColumn":17},{"ruleId":"167","severity":1,"message":"200","line":19,"column":8,"nodeType":"169","messageId":"170","endLine":19,"endColumn":19},{"ruleId":"173","severity":1,"message":"174","line":69,"column":7,"nodeType":"175","endLine":69,"endColumn":25},{"ruleId":"167","severity":1,"message":"201","line":71,"column":20,"nodeType":"169","messageId":"170","endLine":71,"endColumn":36},{"ruleId":"167","severity":1,"message":"202","line":71,"column":54,"nodeType":"169","messageId":"170","endLine":71,"endColumn":65},{"ruleId":"167","severity":1,"message":"203","line":71,"column":67,"nodeType":"169","messageId":"170","endLine":71,"endColumn":75},{"ruleId":"167","severity":1,"message":"204","line":9,"column":10,"nodeType":"169","messageId":"170","endLine":9,"endColumn":21},{"ruleId":"167","severity":1,"message":"205","line":9,"column":23,"nodeType":"169","messageId":"170","endLine":9,"endColumn":37},{"ruleId":"167","severity":1,"message":"206","line":11,"column":9,"nodeType":"169","messageId":"170","endLine":11,"endColumn":19},{"ruleId":"159","severity":1,"message":"207","line":44,"column":39,"nodeType":"161","messageId":"208","endLine":44,"endColumn":41},{"ruleId":"159","severity":1,"message":"207","line":18,"column":35,"nodeType":"161","messageId":"208","endLine":18,"endColumn":37},"no-native-reassign",["209"],"no-negated-in-lhs",["210"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","no-unused-vars","'SwitchesSize' is defined but never used.","Identifier","unusedVar","'ClassesNesting' is defined but never used.","'image' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'image1' is defined but never used.","'drop' is defined but never used.","'guned' is defined but never used.","'ruled' is defined but never used.","'mine' is defined but never used.","'backgournd' is defined but never used.","'axios' is defined but never used.","'nickname' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.name'. Either include it or remove the dependency array.","ArrayExpression",["211"],"'gameModeSelected' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'favorites'. Either include it or remove the dependency array.",["212"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'CardActions' is defined but never used.","'Button' is defined but never used.","'BackgroundColor' is defined but never used.","'CardMedia' is defined but never used.","'ReactPlayer' is defined but never used.","'onSelectAllClick' is assigned a value but never used.","'numSelected' is assigned a value but never used.","'rowCount' is assigned a value but never used.","'gunCatState' is assigned a value but never used.","'setGunCatState' is assigned a value but never used.","'categories' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},"Update the dependencies array to be: [props.name]",{"range":"217","text":"218"},"Update the dependencies array to be: [displayedCards, favorites]",{"range":"219","text":"220"},[1176,1178],"[props.name]",[484,500],"[displayedCards, favorites]"]